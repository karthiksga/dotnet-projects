//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace MaFamille.MaFamilleService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhotoModel", Namespace="http://schemas.datacontract.org/2004/07/MaFamilleService.Model")]
    public partial class PhotoModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AlbumNameField;
        
        private byte[] ImageStreamField;
        
        private string NameField;
        
        private byte[] ThumbnailImageStreamField;
        
        private double TransformField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlbumName {
            get {
                return this.AlbumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumNameField, value) != true)) {
                    this.AlbumNameField = value;
                    this.RaisePropertyChanged("AlbumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ImageStream {
            get {
                return this.ImageStreamField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageStreamField, value) != true)) {
                    this.ImageStreamField = value;
                    this.RaisePropertyChanged("ImageStream");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ThumbnailImageStream {
            get {
                return this.ThumbnailImageStreamField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbnailImageStreamField, value) != true)) {
                    this.ThumbnailImageStreamField = value;
                    this.RaisePropertyChanged("ThumbnailImageStream");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Transform {
            get {
                return this.TransformField;
            }
            set {
                if ((this.TransformField.Equals(value) != true)) {
                    this.TransformField = value;
                    this.RaisePropertyChanged("Transform");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomException", Namespace="http://schemas.datacontract.org/2004/07/MaFamilleService.Model")]
    public partial class CustomException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlbumModel", Namespace="http://schemas.datacontract.org/2004/07/MaFamilleService.Model")]
    public partial class AlbumModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.AlbumImage> AlbumImageField;
        
        private string AlbumNameField;
        
        private bool IsAlbumExistsField;
        
        private string OldAlbumNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.AlbumImage> AlbumImage {
            get {
                return this.AlbumImageField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumImageField, value) != true)) {
                    this.AlbumImageField = value;
                    this.RaisePropertyChanged("AlbumImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlbumName {
            get {
                return this.AlbumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumNameField, value) != true)) {
                    this.AlbumNameField = value;
                    this.RaisePropertyChanged("AlbumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAlbumExists {
            get {
                return this.IsAlbumExistsField;
            }
            set {
                if ((this.IsAlbumExistsField.Equals(value) != true)) {
                    this.IsAlbumExistsField = value;
                    this.RaisePropertyChanged("IsAlbumExists");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldAlbumName {
            get {
                return this.OldAlbumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OldAlbumNameField, value) != true)) {
                    this.OldAlbumNameField = value;
                    this.RaisePropertyChanged("OldAlbumName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlbumImage", Namespace="http://schemas.datacontract.org/2004/07/MaFamilleService.Model")]
    public partial class AlbumImage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte[] ImageStreamField;
        
        private double TransformField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ImageStream {
            get {
                return this.ImageStreamField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageStreamField, value) != true)) {
                    this.ImageStreamField = value;
                    this.RaisePropertyChanged("ImageStream");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Transform {
            get {
                return this.TransformField;
            }
            set {
                if ((this.TransformField.Equals(value) != true)) {
                    this.TransformField = value;
                    this.RaisePropertyChanged("Transform");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileUploadModel", Namespace="http://schemas.datacontract.org/2004/07/MaFamilleService.Model")]
    public partial class FileUploadModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IDField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MaFamilleService.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetPhotos", ReplyAction="http://tempuri.org/IService/GetPhotosResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MaFamille.MaFamilleService.CustomException), Action="http://tempuri.org/IService/GetPhotosCustomExceptionFault", Name="CustomException", Namespace="http://schemas.datacontract.org/2004/07/MaFamilleService.Model")]
        System.IAsyncResult BeginGetPhotos(string album, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.PhotoModel> EndGetPhotos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetPhoto", ReplyAction="http://tempuri.org/IService/GetPhotoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MaFamille.MaFamilleService.CustomException), Action="http://tempuri.org/IService/GetPhotoCustomExceptionFault", Name="CustomException", Namespace="http://schemas.datacontract.org/2004/07/MaFamilleService.Model")]
        System.IAsyncResult BeginGetPhoto(string albumName, string fileName, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetPhoto(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetUploadedPhoto", ReplyAction="http://tempuri.org/IService/GetUploadedPhotoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MaFamille.MaFamilleService.CustomException), Action="http://tempuri.org/IService/GetUploadedPhotoCustomExceptionFault", Name="CustomException", Namespace="http://schemas.datacontract.org/2004/07/MaFamilleService.Model")]
        System.IAsyncResult BeginGetUploadedPhoto(string albumName, string fileName, System.AsyncCallback callback, object asyncState);
        
        MaFamille.MaFamilleService.PhotoModel EndGetUploadedPhoto(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetThumbnailPhoto", ReplyAction="http://tempuri.org/IService/GetThumbnailPhotoResponse")]
        System.IAsyncResult BeginGetThumbnailPhoto(string albumName, string fileName, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetThumbnailPhoto(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetAlbums", ReplyAction="http://tempuri.org/IService/GetAlbumsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MaFamille.MaFamilleService.CustomException), Action="http://tempuri.org/IService/GetAlbumsCustomExceptionFault", Name="CustomException", Namespace="http://schemas.datacontract.org/2004/07/MaFamilleService.Model")]
        System.IAsyncResult BeginGetAlbums(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.AlbumModel> EndGetAlbums(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetWeddingAlbums", ReplyAction="http://tempuri.org/IService/GetWeddingAlbumsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MaFamille.MaFamilleService.CustomException), Action="http://tempuri.org/IService/GetWeddingAlbumsCustomExceptionFault", Name="CustomException", Namespace="http://schemas.datacontract.org/2004/07/MaFamilleService.Model")]
        System.IAsyncResult BeginGetWeddingAlbums(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.AlbumModel> EndGetWeddingAlbums(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetDefaultAlbumImage", ReplyAction="http://tempuri.org/IService/GetDefaultAlbumImageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MaFamille.MaFamilleService.CustomException), Action="http://tempuri.org/IService/GetDefaultAlbumImageCustomExceptionFault", Name="CustomException", Namespace="http://schemas.datacontract.org/2004/07/MaFamilleService.Model")]
        System.IAsyncResult BeginGetDefaultAlbumImage(System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetDefaultAlbumImage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/UploadPhoto", ReplyAction="http://tempuri.org/IService/UploadPhotoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MaFamille.MaFamilleService.CustomException), Action="http://tempuri.org/IService/UploadPhotoCustomExceptionFault", Name="CustomException", Namespace="http://schemas.datacontract.org/2004/07/MaFamilleService.Model")]
        System.IAsyncResult BeginUploadPhoto(string albumName, string fileName, byte[] content, int id, bool append, System.AsyncCallback callback, object asyncState);
        
        MaFamille.MaFamilleService.FileUploadModel EndUploadPhoto(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/RemovePhoto", ReplyAction="http://tempuri.org/IService/RemovePhotoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MaFamille.MaFamilleService.CustomException), Action="http://tempuri.org/IService/RemovePhotoCustomExceptionFault", Name="CustomException", Namespace="http://schemas.datacontract.org/2004/07/MaFamilleService.Model")]
        System.IAsyncResult BeginRemovePhoto(string fileName, int id, System.AsyncCallback callback, object asyncState);
        
        int EndRemovePhoto(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/IsFileExists", ReplyAction="http://tempuri.org/IService/IsFileExistsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MaFamille.MaFamilleService.CustomException), Action="http://tempuri.org/IService/IsFileExistsCustomExceptionFault", Name="CustomException", Namespace="http://schemas.datacontract.org/2004/07/MaFamilleService.Model")]
        System.IAsyncResult BeginIsFileExists(string albumName, string fileName, long length, System.AsyncCallback callback, object asyncState);
        
        bool EndIsFileExists(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/IsAlbumExists", ReplyAction="http://tempuri.org/IService/IsAlbumExistsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MaFamille.MaFamilleService.CustomException), Action="http://tempuri.org/IService/IsAlbumExistsCustomExceptionFault", Name="CustomException", Namespace="http://schemas.datacontract.org/2004/07/MaFamilleService.Model")]
        System.IAsyncResult BeginIsAlbumExists(string albumName, string oldAlbumName, bool isThumbnailsLoaded, System.AsyncCallback callback, object asyncState);
        
        MaFamille.MaFamilleService.AlbumModel EndIsAlbumExists(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/DeleteAlbum", ReplyAction="http://tempuri.org/IService/DeleteAlbumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MaFamille.MaFamilleService.CustomException), Action="http://tempuri.org/IService/DeleteAlbumCustomExceptionFault", Name="CustomException", Namespace="http://schemas.datacontract.org/2004/07/MaFamilleService.Model")]
        System.IAsyncResult BeginDeleteAlbum(string albumName, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteAlbum(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetActiveModule", ReplyAction="http://tempuri.org/IService/GetActiveModuleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MaFamille.MaFamilleService.CustomException), Action="http://tempuri.org/IService/GetActiveModuleCustomExceptionFault", Name="CustomException", Namespace="http://schemas.datacontract.org/2004/07/MaFamilleService.Model")]
        System.IAsyncResult BeginGetActiveModule(System.AsyncCallback callback, object asyncState);
        
        string EndGetActiveModule(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetWeddingPhotos", ReplyAction="http://tempuri.org/IService/GetWeddingPhotosResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MaFamille.MaFamilleService.CustomException), Action="http://tempuri.org/IService/GetWeddingPhotosCustomExceptionFault", Name="CustomException", Namespace="http://schemas.datacontract.org/2004/07/MaFamilleService.Model")]
        System.IAsyncResult BeginGetWeddingPhotos(string album, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndGetWeddingPhotos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetWeddingPhotosList", ReplyAction="http://tempuri.org/IService/GetWeddingPhotosListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MaFamille.MaFamilleService.CustomException), Action="http://tempuri.org/IService/GetWeddingPhotosListCustomExceptionFault", Name="CustomException", Namespace="http://schemas.datacontract.org/2004/07/MaFamilleService.Model")]
        System.IAsyncResult BeginGetWeddingPhotosList(string album, System.Collections.ObjectModel.ObservableCollection<string> files, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.PhotoModel> EndGetWeddingPhotosList(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : MaFamille.MaFamilleService.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPhotosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPhotosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.PhotoModel> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.PhotoModel>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUploadedPhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUploadedPhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MaFamille.MaFamilleService.PhotoModel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MaFamille.MaFamilleService.PhotoModel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetThumbnailPhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetThumbnailPhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAlbumsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAlbumsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.AlbumModel> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.AlbumModel>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetWeddingAlbumsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWeddingAlbumsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.AlbumModel> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.AlbumModel>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDefaultAlbumImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDefaultAlbumImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadPhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UploadPhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MaFamille.MaFamilleService.FileUploadModel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MaFamille.MaFamilleService.FileUploadModel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemovePhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemovePhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsFileExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsFileExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsAlbumExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsAlbumExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MaFamille.MaFamilleService.AlbumModel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MaFamille.MaFamilleService.AlbumModel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetActiveModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetActiveModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetWeddingPhotosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWeddingPhotosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetWeddingPhotosListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWeddingPhotosListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.PhotoModel> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.PhotoModel>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<MaFamille.MaFamilleService.IService>, MaFamille.MaFamilleService.IService {
        
        private BeginOperationDelegate onBeginGetPhotosDelegate;
        
        private EndOperationDelegate onEndGetPhotosDelegate;
        
        private System.Threading.SendOrPostCallback onGetPhotosCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPhotoDelegate;
        
        private EndOperationDelegate onEndGetPhotoDelegate;
        
        private System.Threading.SendOrPostCallback onGetPhotoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUploadedPhotoDelegate;
        
        private EndOperationDelegate onEndGetUploadedPhotoDelegate;
        
        private System.Threading.SendOrPostCallback onGetUploadedPhotoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetThumbnailPhotoDelegate;
        
        private EndOperationDelegate onEndGetThumbnailPhotoDelegate;
        
        private System.Threading.SendOrPostCallback onGetThumbnailPhotoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAlbumsDelegate;
        
        private EndOperationDelegate onEndGetAlbumsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAlbumsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetWeddingAlbumsDelegate;
        
        private EndOperationDelegate onEndGetWeddingAlbumsDelegate;
        
        private System.Threading.SendOrPostCallback onGetWeddingAlbumsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDefaultAlbumImageDelegate;
        
        private EndOperationDelegate onEndGetDefaultAlbumImageDelegate;
        
        private System.Threading.SendOrPostCallback onGetDefaultAlbumImageCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadPhotoDelegate;
        
        private EndOperationDelegate onEndUploadPhotoDelegate;
        
        private System.Threading.SendOrPostCallback onUploadPhotoCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemovePhotoDelegate;
        
        private EndOperationDelegate onEndRemovePhotoDelegate;
        
        private System.Threading.SendOrPostCallback onRemovePhotoCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsFileExistsDelegate;
        
        private EndOperationDelegate onEndIsFileExistsDelegate;
        
        private System.Threading.SendOrPostCallback onIsFileExistsCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsAlbumExistsDelegate;
        
        private EndOperationDelegate onEndIsAlbumExistsDelegate;
        
        private System.Threading.SendOrPostCallback onIsAlbumExistsCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteAlbumDelegate;
        
        private EndOperationDelegate onEndDeleteAlbumDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteAlbumCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetActiveModuleDelegate;
        
        private EndOperationDelegate onEndGetActiveModuleDelegate;
        
        private System.Threading.SendOrPostCallback onGetActiveModuleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetWeddingPhotosDelegate;
        
        private EndOperationDelegate onEndGetWeddingPhotosDelegate;
        
        private System.Threading.SendOrPostCallback onGetWeddingPhotosCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetWeddingPhotosListDelegate;
        
        private EndOperationDelegate onEndGetWeddingPhotosListDelegate;
        
        private System.Threading.SendOrPostCallback onGetWeddingPhotosListCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetPhotosCompletedEventArgs> GetPhotosCompleted;
        
        public event System.EventHandler<GetPhotoCompletedEventArgs> GetPhotoCompleted;
        
        public event System.EventHandler<GetUploadedPhotoCompletedEventArgs> GetUploadedPhotoCompleted;
        
        public event System.EventHandler<GetThumbnailPhotoCompletedEventArgs> GetThumbnailPhotoCompleted;
        
        public event System.EventHandler<GetAlbumsCompletedEventArgs> GetAlbumsCompleted;
        
        public event System.EventHandler<GetWeddingAlbumsCompletedEventArgs> GetWeddingAlbumsCompleted;
        
        public event System.EventHandler<GetDefaultAlbumImageCompletedEventArgs> GetDefaultAlbumImageCompleted;
        
        public event System.EventHandler<UploadPhotoCompletedEventArgs> UploadPhotoCompleted;
        
        public event System.EventHandler<RemovePhotoCompletedEventArgs> RemovePhotoCompleted;
        
        public event System.EventHandler<IsFileExistsCompletedEventArgs> IsFileExistsCompleted;
        
        public event System.EventHandler<IsAlbumExistsCompletedEventArgs> IsAlbumExistsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteAlbumCompleted;
        
        public event System.EventHandler<GetActiveModuleCompletedEventArgs> GetActiveModuleCompleted;
        
        public event System.EventHandler<GetWeddingPhotosCompletedEventArgs> GetWeddingPhotosCompleted;
        
        public event System.EventHandler<GetWeddingPhotosListCompletedEventArgs> GetWeddingPhotosListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MaFamille.MaFamilleService.IService.BeginGetPhotos(string album, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPhotos(album, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.PhotoModel> MaFamille.MaFamilleService.IService.EndGetPhotos(System.IAsyncResult result) {
            return base.Channel.EndGetPhotos(result);
        }
        
        private System.IAsyncResult OnBeginGetPhotos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string album = ((string)(inValues[0]));
            return ((MaFamille.MaFamilleService.IService)(this)).BeginGetPhotos(album, callback, asyncState);
        }
        
        private object[] OnEndGetPhotos(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.PhotoModel> retVal = ((MaFamille.MaFamilleService.IService)(this)).EndGetPhotos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPhotosCompleted(object state) {
            if ((this.GetPhotosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPhotosCompleted(this, new GetPhotosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPhotosAsync(string album) {
            this.GetPhotosAsync(album, null);
        }
        
        public void GetPhotosAsync(string album, object userState) {
            if ((this.onBeginGetPhotosDelegate == null)) {
                this.onBeginGetPhotosDelegate = new BeginOperationDelegate(this.OnBeginGetPhotos);
            }
            if ((this.onEndGetPhotosDelegate == null)) {
                this.onEndGetPhotosDelegate = new EndOperationDelegate(this.OnEndGetPhotos);
            }
            if ((this.onGetPhotosCompletedDelegate == null)) {
                this.onGetPhotosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPhotosCompleted);
            }
            base.InvokeAsync(this.onBeginGetPhotosDelegate, new object[] {
                        album}, this.onEndGetPhotosDelegate, this.onGetPhotosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MaFamille.MaFamilleService.IService.BeginGetPhoto(string albumName, string fileName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPhoto(albumName, fileName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] MaFamille.MaFamilleService.IService.EndGetPhoto(System.IAsyncResult result) {
            return base.Channel.EndGetPhoto(result);
        }
        
        private System.IAsyncResult OnBeginGetPhoto(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string albumName = ((string)(inValues[0]));
            string fileName = ((string)(inValues[1]));
            return ((MaFamille.MaFamilleService.IService)(this)).BeginGetPhoto(albumName, fileName, callback, asyncState);
        }
        
        private object[] OnEndGetPhoto(System.IAsyncResult result) {
            byte[] retVal = ((MaFamille.MaFamilleService.IService)(this)).EndGetPhoto(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPhotoCompleted(object state) {
            if ((this.GetPhotoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPhotoCompleted(this, new GetPhotoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPhotoAsync(string albumName, string fileName) {
            this.GetPhotoAsync(albumName, fileName, null);
        }
        
        public void GetPhotoAsync(string albumName, string fileName, object userState) {
            if ((this.onBeginGetPhotoDelegate == null)) {
                this.onBeginGetPhotoDelegate = new BeginOperationDelegate(this.OnBeginGetPhoto);
            }
            if ((this.onEndGetPhotoDelegate == null)) {
                this.onEndGetPhotoDelegate = new EndOperationDelegate(this.OnEndGetPhoto);
            }
            if ((this.onGetPhotoCompletedDelegate == null)) {
                this.onGetPhotoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPhotoCompleted);
            }
            base.InvokeAsync(this.onBeginGetPhotoDelegate, new object[] {
                        albumName,
                        fileName}, this.onEndGetPhotoDelegate, this.onGetPhotoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MaFamille.MaFamilleService.IService.BeginGetUploadedPhoto(string albumName, string fileName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUploadedPhoto(albumName, fileName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MaFamille.MaFamilleService.PhotoModel MaFamille.MaFamilleService.IService.EndGetUploadedPhoto(System.IAsyncResult result) {
            return base.Channel.EndGetUploadedPhoto(result);
        }
        
        private System.IAsyncResult OnBeginGetUploadedPhoto(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string albumName = ((string)(inValues[0]));
            string fileName = ((string)(inValues[1]));
            return ((MaFamille.MaFamilleService.IService)(this)).BeginGetUploadedPhoto(albumName, fileName, callback, asyncState);
        }
        
        private object[] OnEndGetUploadedPhoto(System.IAsyncResult result) {
            MaFamille.MaFamilleService.PhotoModel retVal = ((MaFamille.MaFamilleService.IService)(this)).EndGetUploadedPhoto(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUploadedPhotoCompleted(object state) {
            if ((this.GetUploadedPhotoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUploadedPhotoCompleted(this, new GetUploadedPhotoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUploadedPhotoAsync(string albumName, string fileName) {
            this.GetUploadedPhotoAsync(albumName, fileName, null);
        }
        
        public void GetUploadedPhotoAsync(string albumName, string fileName, object userState) {
            if ((this.onBeginGetUploadedPhotoDelegate == null)) {
                this.onBeginGetUploadedPhotoDelegate = new BeginOperationDelegate(this.OnBeginGetUploadedPhoto);
            }
            if ((this.onEndGetUploadedPhotoDelegate == null)) {
                this.onEndGetUploadedPhotoDelegate = new EndOperationDelegate(this.OnEndGetUploadedPhoto);
            }
            if ((this.onGetUploadedPhotoCompletedDelegate == null)) {
                this.onGetUploadedPhotoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUploadedPhotoCompleted);
            }
            base.InvokeAsync(this.onBeginGetUploadedPhotoDelegate, new object[] {
                        albumName,
                        fileName}, this.onEndGetUploadedPhotoDelegate, this.onGetUploadedPhotoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MaFamille.MaFamilleService.IService.BeginGetThumbnailPhoto(string albumName, string fileName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetThumbnailPhoto(albumName, fileName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] MaFamille.MaFamilleService.IService.EndGetThumbnailPhoto(System.IAsyncResult result) {
            return base.Channel.EndGetThumbnailPhoto(result);
        }
        
        private System.IAsyncResult OnBeginGetThumbnailPhoto(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string albumName = ((string)(inValues[0]));
            string fileName = ((string)(inValues[1]));
            return ((MaFamille.MaFamilleService.IService)(this)).BeginGetThumbnailPhoto(albumName, fileName, callback, asyncState);
        }
        
        private object[] OnEndGetThumbnailPhoto(System.IAsyncResult result) {
            byte[] retVal = ((MaFamille.MaFamilleService.IService)(this)).EndGetThumbnailPhoto(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetThumbnailPhotoCompleted(object state) {
            if ((this.GetThumbnailPhotoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetThumbnailPhotoCompleted(this, new GetThumbnailPhotoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetThumbnailPhotoAsync(string albumName, string fileName) {
            this.GetThumbnailPhotoAsync(albumName, fileName, null);
        }
        
        public void GetThumbnailPhotoAsync(string albumName, string fileName, object userState) {
            if ((this.onBeginGetThumbnailPhotoDelegate == null)) {
                this.onBeginGetThumbnailPhotoDelegate = new BeginOperationDelegate(this.OnBeginGetThumbnailPhoto);
            }
            if ((this.onEndGetThumbnailPhotoDelegate == null)) {
                this.onEndGetThumbnailPhotoDelegate = new EndOperationDelegate(this.OnEndGetThumbnailPhoto);
            }
            if ((this.onGetThumbnailPhotoCompletedDelegate == null)) {
                this.onGetThumbnailPhotoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetThumbnailPhotoCompleted);
            }
            base.InvokeAsync(this.onBeginGetThumbnailPhotoDelegate, new object[] {
                        albumName,
                        fileName}, this.onEndGetThumbnailPhotoDelegate, this.onGetThumbnailPhotoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MaFamille.MaFamilleService.IService.BeginGetAlbums(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAlbums(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.AlbumModel> MaFamille.MaFamilleService.IService.EndGetAlbums(System.IAsyncResult result) {
            return base.Channel.EndGetAlbums(result);
        }
        
        private System.IAsyncResult OnBeginGetAlbums(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MaFamille.MaFamilleService.IService)(this)).BeginGetAlbums(callback, asyncState);
        }
        
        private object[] OnEndGetAlbums(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.AlbumModel> retVal = ((MaFamille.MaFamilleService.IService)(this)).EndGetAlbums(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAlbumsCompleted(object state) {
            if ((this.GetAlbumsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAlbumsCompleted(this, new GetAlbumsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAlbumsAsync() {
            this.GetAlbumsAsync(null);
        }
        
        public void GetAlbumsAsync(object userState) {
            if ((this.onBeginGetAlbumsDelegate == null)) {
                this.onBeginGetAlbumsDelegate = new BeginOperationDelegate(this.OnBeginGetAlbums);
            }
            if ((this.onEndGetAlbumsDelegate == null)) {
                this.onEndGetAlbumsDelegate = new EndOperationDelegate(this.OnEndGetAlbums);
            }
            if ((this.onGetAlbumsCompletedDelegate == null)) {
                this.onGetAlbumsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAlbumsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAlbumsDelegate, null, this.onEndGetAlbumsDelegate, this.onGetAlbumsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MaFamille.MaFamilleService.IService.BeginGetWeddingAlbums(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWeddingAlbums(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.AlbumModel> MaFamille.MaFamilleService.IService.EndGetWeddingAlbums(System.IAsyncResult result) {
            return base.Channel.EndGetWeddingAlbums(result);
        }
        
        private System.IAsyncResult OnBeginGetWeddingAlbums(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MaFamille.MaFamilleService.IService)(this)).BeginGetWeddingAlbums(callback, asyncState);
        }
        
        private object[] OnEndGetWeddingAlbums(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.AlbumModel> retVal = ((MaFamille.MaFamilleService.IService)(this)).EndGetWeddingAlbums(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWeddingAlbumsCompleted(object state) {
            if ((this.GetWeddingAlbumsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWeddingAlbumsCompleted(this, new GetWeddingAlbumsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWeddingAlbumsAsync() {
            this.GetWeddingAlbumsAsync(null);
        }
        
        public void GetWeddingAlbumsAsync(object userState) {
            if ((this.onBeginGetWeddingAlbumsDelegate == null)) {
                this.onBeginGetWeddingAlbumsDelegate = new BeginOperationDelegate(this.OnBeginGetWeddingAlbums);
            }
            if ((this.onEndGetWeddingAlbumsDelegate == null)) {
                this.onEndGetWeddingAlbumsDelegate = new EndOperationDelegate(this.OnEndGetWeddingAlbums);
            }
            if ((this.onGetWeddingAlbumsCompletedDelegate == null)) {
                this.onGetWeddingAlbumsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWeddingAlbumsCompleted);
            }
            base.InvokeAsync(this.onBeginGetWeddingAlbumsDelegate, null, this.onEndGetWeddingAlbumsDelegate, this.onGetWeddingAlbumsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MaFamille.MaFamilleService.IService.BeginGetDefaultAlbumImage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDefaultAlbumImage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] MaFamille.MaFamilleService.IService.EndGetDefaultAlbumImage(System.IAsyncResult result) {
            return base.Channel.EndGetDefaultAlbumImage(result);
        }
        
        private System.IAsyncResult OnBeginGetDefaultAlbumImage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MaFamille.MaFamilleService.IService)(this)).BeginGetDefaultAlbumImage(callback, asyncState);
        }
        
        private object[] OnEndGetDefaultAlbumImage(System.IAsyncResult result) {
            byte[] retVal = ((MaFamille.MaFamilleService.IService)(this)).EndGetDefaultAlbumImage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDefaultAlbumImageCompleted(object state) {
            if ((this.GetDefaultAlbumImageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDefaultAlbumImageCompleted(this, new GetDefaultAlbumImageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDefaultAlbumImageAsync() {
            this.GetDefaultAlbumImageAsync(null);
        }
        
        public void GetDefaultAlbumImageAsync(object userState) {
            if ((this.onBeginGetDefaultAlbumImageDelegate == null)) {
                this.onBeginGetDefaultAlbumImageDelegate = new BeginOperationDelegate(this.OnBeginGetDefaultAlbumImage);
            }
            if ((this.onEndGetDefaultAlbumImageDelegate == null)) {
                this.onEndGetDefaultAlbumImageDelegate = new EndOperationDelegate(this.OnEndGetDefaultAlbumImage);
            }
            if ((this.onGetDefaultAlbumImageCompletedDelegate == null)) {
                this.onGetDefaultAlbumImageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDefaultAlbumImageCompleted);
            }
            base.InvokeAsync(this.onBeginGetDefaultAlbumImageDelegate, null, this.onEndGetDefaultAlbumImageDelegate, this.onGetDefaultAlbumImageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MaFamille.MaFamilleService.IService.BeginUploadPhoto(string albumName, string fileName, byte[] content, int id, bool append, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadPhoto(albumName, fileName, content, id, append, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MaFamille.MaFamilleService.FileUploadModel MaFamille.MaFamilleService.IService.EndUploadPhoto(System.IAsyncResult result) {
            return base.Channel.EndUploadPhoto(result);
        }
        
        private System.IAsyncResult OnBeginUploadPhoto(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string albumName = ((string)(inValues[0]));
            string fileName = ((string)(inValues[1]));
            byte[] content = ((byte[])(inValues[2]));
            int id = ((int)(inValues[3]));
            bool append = ((bool)(inValues[4]));
            return ((MaFamille.MaFamilleService.IService)(this)).BeginUploadPhoto(albumName, fileName, content, id, append, callback, asyncState);
        }
        
        private object[] OnEndUploadPhoto(System.IAsyncResult result) {
            MaFamille.MaFamilleService.FileUploadModel retVal = ((MaFamille.MaFamilleService.IService)(this)).EndUploadPhoto(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUploadPhotoCompleted(object state) {
            if ((this.UploadPhotoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadPhotoCompleted(this, new UploadPhotoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadPhotoAsync(string albumName, string fileName, byte[] content, int id, bool append) {
            this.UploadPhotoAsync(albumName, fileName, content, id, append, null);
        }
        
        public void UploadPhotoAsync(string albumName, string fileName, byte[] content, int id, bool append, object userState) {
            if ((this.onBeginUploadPhotoDelegate == null)) {
                this.onBeginUploadPhotoDelegate = new BeginOperationDelegate(this.OnBeginUploadPhoto);
            }
            if ((this.onEndUploadPhotoDelegate == null)) {
                this.onEndUploadPhotoDelegate = new EndOperationDelegate(this.OnEndUploadPhoto);
            }
            if ((this.onUploadPhotoCompletedDelegate == null)) {
                this.onUploadPhotoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadPhotoCompleted);
            }
            base.InvokeAsync(this.onBeginUploadPhotoDelegate, new object[] {
                        albumName,
                        fileName,
                        content,
                        id,
                        append}, this.onEndUploadPhotoDelegate, this.onUploadPhotoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MaFamille.MaFamilleService.IService.BeginRemovePhoto(string fileName, int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemovePhoto(fileName, id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int MaFamille.MaFamilleService.IService.EndRemovePhoto(System.IAsyncResult result) {
            return base.Channel.EndRemovePhoto(result);
        }
        
        private System.IAsyncResult OnBeginRemovePhoto(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            int id = ((int)(inValues[1]));
            return ((MaFamille.MaFamilleService.IService)(this)).BeginRemovePhoto(fileName, id, callback, asyncState);
        }
        
        private object[] OnEndRemovePhoto(System.IAsyncResult result) {
            int retVal = ((MaFamille.MaFamilleService.IService)(this)).EndRemovePhoto(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemovePhotoCompleted(object state) {
            if ((this.RemovePhotoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemovePhotoCompleted(this, new RemovePhotoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemovePhotoAsync(string fileName, int id) {
            this.RemovePhotoAsync(fileName, id, null);
        }
        
        public void RemovePhotoAsync(string fileName, int id, object userState) {
            if ((this.onBeginRemovePhotoDelegate == null)) {
                this.onBeginRemovePhotoDelegate = new BeginOperationDelegate(this.OnBeginRemovePhoto);
            }
            if ((this.onEndRemovePhotoDelegate == null)) {
                this.onEndRemovePhotoDelegate = new EndOperationDelegate(this.OnEndRemovePhoto);
            }
            if ((this.onRemovePhotoCompletedDelegate == null)) {
                this.onRemovePhotoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemovePhotoCompleted);
            }
            base.InvokeAsync(this.onBeginRemovePhotoDelegate, new object[] {
                        fileName,
                        id}, this.onEndRemovePhotoDelegate, this.onRemovePhotoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MaFamille.MaFamilleService.IService.BeginIsFileExists(string albumName, string fileName, long length, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsFileExists(albumName, fileName, length, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool MaFamille.MaFamilleService.IService.EndIsFileExists(System.IAsyncResult result) {
            return base.Channel.EndIsFileExists(result);
        }
        
        private System.IAsyncResult OnBeginIsFileExists(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string albumName = ((string)(inValues[0]));
            string fileName = ((string)(inValues[1]));
            long length = ((long)(inValues[2]));
            return ((MaFamille.MaFamilleService.IService)(this)).BeginIsFileExists(albumName, fileName, length, callback, asyncState);
        }
        
        private object[] OnEndIsFileExists(System.IAsyncResult result) {
            bool retVal = ((MaFamille.MaFamilleService.IService)(this)).EndIsFileExists(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsFileExistsCompleted(object state) {
            if ((this.IsFileExistsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsFileExistsCompleted(this, new IsFileExistsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsFileExistsAsync(string albumName, string fileName, long length) {
            this.IsFileExistsAsync(albumName, fileName, length, null);
        }
        
        public void IsFileExistsAsync(string albumName, string fileName, long length, object userState) {
            if ((this.onBeginIsFileExistsDelegate == null)) {
                this.onBeginIsFileExistsDelegate = new BeginOperationDelegate(this.OnBeginIsFileExists);
            }
            if ((this.onEndIsFileExistsDelegate == null)) {
                this.onEndIsFileExistsDelegate = new EndOperationDelegate(this.OnEndIsFileExists);
            }
            if ((this.onIsFileExistsCompletedDelegate == null)) {
                this.onIsFileExistsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsFileExistsCompleted);
            }
            base.InvokeAsync(this.onBeginIsFileExistsDelegate, new object[] {
                        albumName,
                        fileName,
                        length}, this.onEndIsFileExistsDelegate, this.onIsFileExistsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MaFamille.MaFamilleService.IService.BeginIsAlbumExists(string albumName, string oldAlbumName, bool isThumbnailsLoaded, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsAlbumExists(albumName, oldAlbumName, isThumbnailsLoaded, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MaFamille.MaFamilleService.AlbumModel MaFamille.MaFamilleService.IService.EndIsAlbumExists(System.IAsyncResult result) {
            return base.Channel.EndIsAlbumExists(result);
        }
        
        private System.IAsyncResult OnBeginIsAlbumExists(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string albumName = ((string)(inValues[0]));
            string oldAlbumName = ((string)(inValues[1]));
            bool isThumbnailsLoaded = ((bool)(inValues[2]));
            return ((MaFamille.MaFamilleService.IService)(this)).BeginIsAlbumExists(albumName, oldAlbumName, isThumbnailsLoaded, callback, asyncState);
        }
        
        private object[] OnEndIsAlbumExists(System.IAsyncResult result) {
            MaFamille.MaFamilleService.AlbumModel retVal = ((MaFamille.MaFamilleService.IService)(this)).EndIsAlbumExists(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsAlbumExistsCompleted(object state) {
            if ((this.IsAlbumExistsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsAlbumExistsCompleted(this, new IsAlbumExistsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsAlbumExistsAsync(string albumName, string oldAlbumName, bool isThumbnailsLoaded) {
            this.IsAlbumExistsAsync(albumName, oldAlbumName, isThumbnailsLoaded, null);
        }
        
        public void IsAlbumExistsAsync(string albumName, string oldAlbumName, bool isThumbnailsLoaded, object userState) {
            if ((this.onBeginIsAlbumExistsDelegate == null)) {
                this.onBeginIsAlbumExistsDelegate = new BeginOperationDelegate(this.OnBeginIsAlbumExists);
            }
            if ((this.onEndIsAlbumExistsDelegate == null)) {
                this.onEndIsAlbumExistsDelegate = new EndOperationDelegate(this.OnEndIsAlbumExists);
            }
            if ((this.onIsAlbumExistsCompletedDelegate == null)) {
                this.onIsAlbumExistsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsAlbumExistsCompleted);
            }
            base.InvokeAsync(this.onBeginIsAlbumExistsDelegate, new object[] {
                        albumName,
                        oldAlbumName,
                        isThumbnailsLoaded}, this.onEndIsAlbumExistsDelegate, this.onIsAlbumExistsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MaFamille.MaFamilleService.IService.BeginDeleteAlbum(string albumName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteAlbum(albumName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void MaFamille.MaFamilleService.IService.EndDeleteAlbum(System.IAsyncResult result) {
            base.Channel.EndDeleteAlbum(result);
        }
        
        private System.IAsyncResult OnBeginDeleteAlbum(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string albumName = ((string)(inValues[0]));
            return ((MaFamille.MaFamilleService.IService)(this)).BeginDeleteAlbum(albumName, callback, asyncState);
        }
        
        private object[] OnEndDeleteAlbum(System.IAsyncResult result) {
            ((MaFamille.MaFamilleService.IService)(this)).EndDeleteAlbum(result);
            return null;
        }
        
        private void OnDeleteAlbumCompleted(object state) {
            if ((this.DeleteAlbumCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteAlbumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAlbumAsync(string albumName) {
            this.DeleteAlbumAsync(albumName, null);
        }
        
        public void DeleteAlbumAsync(string albumName, object userState) {
            if ((this.onBeginDeleteAlbumDelegate == null)) {
                this.onBeginDeleteAlbumDelegate = new BeginOperationDelegate(this.OnBeginDeleteAlbum);
            }
            if ((this.onEndDeleteAlbumDelegate == null)) {
                this.onEndDeleteAlbumDelegate = new EndOperationDelegate(this.OnEndDeleteAlbum);
            }
            if ((this.onDeleteAlbumCompletedDelegate == null)) {
                this.onDeleteAlbumCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteAlbumCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteAlbumDelegate, new object[] {
                        albumName}, this.onEndDeleteAlbumDelegate, this.onDeleteAlbumCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MaFamille.MaFamilleService.IService.BeginGetActiveModule(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetActiveModule(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string MaFamille.MaFamilleService.IService.EndGetActiveModule(System.IAsyncResult result) {
            return base.Channel.EndGetActiveModule(result);
        }
        
        private System.IAsyncResult OnBeginGetActiveModule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MaFamille.MaFamilleService.IService)(this)).BeginGetActiveModule(callback, asyncState);
        }
        
        private object[] OnEndGetActiveModule(System.IAsyncResult result) {
            string retVal = ((MaFamille.MaFamilleService.IService)(this)).EndGetActiveModule(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetActiveModuleCompleted(object state) {
            if ((this.GetActiveModuleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetActiveModuleCompleted(this, new GetActiveModuleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetActiveModuleAsync() {
            this.GetActiveModuleAsync(null);
        }
        
        public void GetActiveModuleAsync(object userState) {
            if ((this.onBeginGetActiveModuleDelegate == null)) {
                this.onBeginGetActiveModuleDelegate = new BeginOperationDelegate(this.OnBeginGetActiveModule);
            }
            if ((this.onEndGetActiveModuleDelegate == null)) {
                this.onEndGetActiveModuleDelegate = new EndOperationDelegate(this.OnEndGetActiveModule);
            }
            if ((this.onGetActiveModuleCompletedDelegate == null)) {
                this.onGetActiveModuleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetActiveModuleCompleted);
            }
            base.InvokeAsync(this.onBeginGetActiveModuleDelegate, null, this.onEndGetActiveModuleDelegate, this.onGetActiveModuleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MaFamille.MaFamilleService.IService.BeginGetWeddingPhotos(string album, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWeddingPhotos(album, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> MaFamille.MaFamilleService.IService.EndGetWeddingPhotos(System.IAsyncResult result) {
            return base.Channel.EndGetWeddingPhotos(result);
        }
        
        private System.IAsyncResult OnBeginGetWeddingPhotos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string album = ((string)(inValues[0]));
            return ((MaFamille.MaFamilleService.IService)(this)).BeginGetWeddingPhotos(album, callback, asyncState);
        }
        
        private object[] OnEndGetWeddingPhotos(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((MaFamille.MaFamilleService.IService)(this)).EndGetWeddingPhotos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWeddingPhotosCompleted(object state) {
            if ((this.GetWeddingPhotosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWeddingPhotosCompleted(this, new GetWeddingPhotosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWeddingPhotosAsync(string album) {
            this.GetWeddingPhotosAsync(album, null);
        }
        
        public void GetWeddingPhotosAsync(string album, object userState) {
            if ((this.onBeginGetWeddingPhotosDelegate == null)) {
                this.onBeginGetWeddingPhotosDelegate = new BeginOperationDelegate(this.OnBeginGetWeddingPhotos);
            }
            if ((this.onEndGetWeddingPhotosDelegate == null)) {
                this.onEndGetWeddingPhotosDelegate = new EndOperationDelegate(this.OnEndGetWeddingPhotos);
            }
            if ((this.onGetWeddingPhotosCompletedDelegate == null)) {
                this.onGetWeddingPhotosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWeddingPhotosCompleted);
            }
            base.InvokeAsync(this.onBeginGetWeddingPhotosDelegate, new object[] {
                        album}, this.onEndGetWeddingPhotosDelegate, this.onGetWeddingPhotosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MaFamille.MaFamilleService.IService.BeginGetWeddingPhotosList(string album, System.Collections.ObjectModel.ObservableCollection<string> files, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWeddingPhotosList(album, files, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.PhotoModel> MaFamille.MaFamilleService.IService.EndGetWeddingPhotosList(System.IAsyncResult result) {
            return base.Channel.EndGetWeddingPhotosList(result);
        }
        
        private System.IAsyncResult OnBeginGetWeddingPhotosList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string album = ((string)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<string> files = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[1]));
            return ((MaFamille.MaFamilleService.IService)(this)).BeginGetWeddingPhotosList(album, files, callback, asyncState);
        }
        
        private object[] OnEndGetWeddingPhotosList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.PhotoModel> retVal = ((MaFamille.MaFamilleService.IService)(this)).EndGetWeddingPhotosList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWeddingPhotosListCompleted(object state) {
            if ((this.GetWeddingPhotosListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWeddingPhotosListCompleted(this, new GetWeddingPhotosListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWeddingPhotosListAsync(string album, System.Collections.ObjectModel.ObservableCollection<string> files) {
            this.GetWeddingPhotosListAsync(album, files, null);
        }
        
        public void GetWeddingPhotosListAsync(string album, System.Collections.ObjectModel.ObservableCollection<string> files, object userState) {
            if ((this.onBeginGetWeddingPhotosListDelegate == null)) {
                this.onBeginGetWeddingPhotosListDelegate = new BeginOperationDelegate(this.OnBeginGetWeddingPhotosList);
            }
            if ((this.onEndGetWeddingPhotosListDelegate == null)) {
                this.onEndGetWeddingPhotosListDelegate = new EndOperationDelegate(this.OnEndGetWeddingPhotosList);
            }
            if ((this.onGetWeddingPhotosListCompletedDelegate == null)) {
                this.onGetWeddingPhotosListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWeddingPhotosListCompleted);
            }
            base.InvokeAsync(this.onBeginGetWeddingPhotosListDelegate, new object[] {
                        album,
                        files}, this.onEndGetWeddingPhotosListDelegate, this.onGetWeddingPhotosListCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override MaFamille.MaFamilleService.IService CreateChannel() {
            return new ServiceClientChannel(this);
        }
        
        private class ServiceClientChannel : ChannelBase<MaFamille.MaFamilleService.IService>, MaFamille.MaFamilleService.IService {
            
            public ServiceClientChannel(System.ServiceModel.ClientBase<MaFamille.MaFamilleService.IService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetPhotos(string album, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = album;
                System.IAsyncResult _result = base.BeginInvoke("GetPhotos", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.PhotoModel> EndGetPhotos(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.PhotoModel> _result = ((System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.PhotoModel>)(base.EndInvoke("GetPhotos", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPhoto(string albumName, string fileName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = albumName;
                _args[1] = fileName;
                System.IAsyncResult _result = base.BeginInvoke("GetPhoto", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndGetPhoto(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("GetPhoto", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUploadedPhoto(string albumName, string fileName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = albumName;
                _args[1] = fileName;
                System.IAsyncResult _result = base.BeginInvoke("GetUploadedPhoto", _args, callback, asyncState);
                return _result;
            }
            
            public MaFamille.MaFamilleService.PhotoModel EndGetUploadedPhoto(System.IAsyncResult result) {
                object[] _args = new object[0];
                MaFamille.MaFamilleService.PhotoModel _result = ((MaFamille.MaFamilleService.PhotoModel)(base.EndInvoke("GetUploadedPhoto", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetThumbnailPhoto(string albumName, string fileName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = albumName;
                _args[1] = fileName;
                System.IAsyncResult _result = base.BeginInvoke("GetThumbnailPhoto", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndGetThumbnailPhoto(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("GetThumbnailPhoto", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAlbums(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAlbums", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.AlbumModel> EndGetAlbums(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.AlbumModel> _result = ((System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.AlbumModel>)(base.EndInvoke("GetAlbums", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetWeddingAlbums(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetWeddingAlbums", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.AlbumModel> EndGetWeddingAlbums(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.AlbumModel> _result = ((System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.AlbumModel>)(base.EndInvoke("GetWeddingAlbums", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDefaultAlbumImage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetDefaultAlbumImage", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndGetDefaultAlbumImage(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("GetDefaultAlbumImage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUploadPhoto(string albumName, string fileName, byte[] content, int id, bool append, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = albumName;
                _args[1] = fileName;
                _args[2] = content;
                _args[3] = id;
                _args[4] = append;
                System.IAsyncResult _result = base.BeginInvoke("UploadPhoto", _args, callback, asyncState);
                return _result;
            }
            
            public MaFamille.MaFamilleService.FileUploadModel EndUploadPhoto(System.IAsyncResult result) {
                object[] _args = new object[0];
                MaFamille.MaFamilleService.FileUploadModel _result = ((MaFamille.MaFamilleService.FileUploadModel)(base.EndInvoke("UploadPhoto", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemovePhoto(string fileName, int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = fileName;
                _args[1] = id;
                System.IAsyncResult _result = base.BeginInvoke("RemovePhoto", _args, callback, asyncState);
                return _result;
            }
            
            public int EndRemovePhoto(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("RemovePhoto", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginIsFileExists(string albumName, string fileName, long length, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = albumName;
                _args[1] = fileName;
                _args[2] = length;
                System.IAsyncResult _result = base.BeginInvoke("IsFileExists", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndIsFileExists(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("IsFileExists", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginIsAlbumExists(string albumName, string oldAlbumName, bool isThumbnailsLoaded, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = albumName;
                _args[1] = oldAlbumName;
                _args[2] = isThumbnailsLoaded;
                System.IAsyncResult _result = base.BeginInvoke("IsAlbumExists", _args, callback, asyncState);
                return _result;
            }
            
            public MaFamille.MaFamilleService.AlbumModel EndIsAlbumExists(System.IAsyncResult result) {
                object[] _args = new object[0];
                MaFamille.MaFamilleService.AlbumModel _result = ((MaFamille.MaFamilleService.AlbumModel)(base.EndInvoke("IsAlbumExists", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteAlbum(string albumName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = albumName;
                System.IAsyncResult _result = base.BeginInvoke("DeleteAlbum", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteAlbum(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteAlbum", _args, result);
            }
            
            public System.IAsyncResult BeginGetActiveModule(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetActiveModule", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetActiveModule(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetActiveModule", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetWeddingPhotos(string album, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = album;
                System.IAsyncResult _result = base.BeginInvoke("GetWeddingPhotos", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndGetWeddingPhotos(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("GetWeddingPhotos", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetWeddingPhotosList(string album, System.Collections.ObjectModel.ObservableCollection<string> files, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = album;
                _args[1] = files;
                System.IAsyncResult _result = base.BeginInvoke("GetWeddingPhotosList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.PhotoModel> EndGetWeddingPhotosList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.PhotoModel> _result = ((System.Collections.ObjectModel.ObservableCollection<MaFamille.MaFamilleService.PhotoModel>)(base.EndInvoke("GetWeddingPhotosList", _args, result)));
                return _result;
            }
        }
    }
}
