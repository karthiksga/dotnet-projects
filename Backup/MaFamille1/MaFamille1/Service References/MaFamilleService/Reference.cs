//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace MaFamille1.MaFamilleService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhotoModel", Namespace="http://schemas.datacontract.org/2004/07/WcfService1.Model")]
    public partial class PhotoModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AlbumNameField;
        
        private byte[] ImageStreamField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlbumName {
            get {
                return this.AlbumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumNameField, value) != true)) {
                    this.AlbumNameField = value;
                    this.RaisePropertyChanged("AlbumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ImageStream {
            get {
                return this.ImageStreamField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageStreamField, value) != true)) {
                    this.ImageStreamField = value;
                    this.RaisePropertyChanged("ImageStream");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TsunamiModel", Namespace="http://schemas.datacontract.org/2004/07/WcfService1.Model")]
    public partial class TsunamiModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private decimal CanvasLeftField;
        
        private decimal CanvasTopField;
        
        private byte[] ImageStreamField;
        
        private decimal RotationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CanvasLeft {
            get {
                return this.CanvasLeftField;
            }
            set {
                if ((this.CanvasLeftField.Equals(value) != true)) {
                    this.CanvasLeftField = value;
                    this.RaisePropertyChanged("CanvasLeft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CanvasTop {
            get {
                return this.CanvasTopField;
            }
            set {
                if ((this.CanvasTopField.Equals(value) != true)) {
                    this.CanvasTopField = value;
                    this.RaisePropertyChanged("CanvasTop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ImageStream {
            get {
                return this.ImageStreamField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageStreamField, value) != true)) {
                    this.ImageStreamField = value;
                    this.RaisePropertyChanged("ImageStream");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rotation {
            get {
                return this.RotationField;
            }
            set {
                if ((this.RotationField.Equals(value) != true)) {
                    this.RotationField = value;
                    this.RaisePropertyChanged("Rotation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlbumModel", Namespace="http://schemas.datacontract.org/2004/07/WcfService1.Model")]
    public partial class AlbumModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AlbumNameField;
        
        private byte[] ImageStreamField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlbumName {
            get {
                return this.AlbumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumNameField, value) != true)) {
                    this.AlbumNameField = value;
                    this.RaisePropertyChanged("AlbumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ImageStream {
            get {
                return this.ImageStreamField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageStreamField, value) != true)) {
                    this.ImageStreamField = value;
                    this.RaisePropertyChanged("ImageStream");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileUploadModel", Namespace="http://schemas.datacontract.org/2004/07/WcfService1.Model")]
    public partial class FileUploadModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IDField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomException", Namespace="http://schemas.datacontract.org/2004/07/WcfService1.Model")]
    public partial class CustomException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MaFamilleService.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetData", ReplyAction="http://tempuri.org/IService/GetDataResponse")]
        System.IAsyncResult BeginGetData(int value, System.AsyncCallback callback, object asyncState);
        
        string EndGetData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetPhotos", ReplyAction="http://tempuri.org/IService/GetPhotosResponse")]
        System.IAsyncResult BeginGetPhotos(string album, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MaFamille1.MaFamilleService.PhotoModel> EndGetPhotos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetTsunamiPhotos", ReplyAction="http://tempuri.org/IService/GetTsunamiPhotosResponse")]
        System.IAsyncResult BeginGetTsunamiPhotos(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MaFamille1.MaFamilleService.TsunamiModel> EndGetTsunamiPhotos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetPhoto", ReplyAction="http://tempuri.org/IService/GetPhotoResponse")]
        System.IAsyncResult BeginGetPhoto(string albumName, string fileName, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetPhoto(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetPhotoObject", ReplyAction="http://tempuri.org/IService/GetPhotoObjectResponse")]
        System.IAsyncResult BeginGetPhotoObject(string fileName, System.AsyncCallback callback, object asyncState);
        
        MaFamille1.MaFamilleService.AlbumModel EndGetPhotoObject(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetAlbums", ReplyAction="http://tempuri.org/IService/GetAlbumsResponse")]
        System.IAsyncResult BeginGetAlbums(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MaFamille1.MaFamilleService.AlbumModel> EndGetAlbums(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/UploadPhoto", ReplyAction="http://tempuri.org/IService/UploadPhotoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MaFamille1.MaFamilleService.CustomException), Action="http://tempuri.org/IService/UploadPhotoCustomExceptionFault", Name="CustomException", Namespace="http://schemas.datacontract.org/2004/07/WcfService1.Model")]
        System.IAsyncResult BeginUploadPhoto(string albumName, string fileName, byte[] content, int id, bool append, System.AsyncCallback callback, object asyncState);
        
        MaFamille1.MaFamilleService.FileUploadModel EndUploadPhoto(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/RemovePhoto", ReplyAction="http://tempuri.org/IService/RemovePhotoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MaFamille1.MaFamilleService.CustomException), Action="http://tempuri.org/IService/RemovePhotoCustomExceptionFault", Name="CustomException", Namespace="http://schemas.datacontract.org/2004/07/WcfService1.Model")]
        System.IAsyncResult BeginRemovePhoto(string fileName, int id, System.AsyncCallback callback, object asyncState);
        
        int EndRemovePhoto(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/IsFileExists", ReplyAction="http://tempuri.org/IService/IsFileExistsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MaFamille1.MaFamilleService.CustomException), Action="http://tempuri.org/IService/IsFileExistsCustomExceptionFault", Name="CustomException", Namespace="http://schemas.datacontract.org/2004/07/WcfService1.Model")]
        System.IAsyncResult BeginIsFileExists(string albumName, string fileName, long length, System.AsyncCallback callback, object asyncState);
        
        bool EndIsFileExists(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/IsAlbumExists", ReplyAction="http://tempuri.org/IService/IsAlbumExistsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MaFamille1.MaFamilleService.CustomException), Action="http://tempuri.org/IService/IsAlbumExistsCustomExceptionFault", Name="CustomException", Namespace="http://schemas.datacontract.org/2004/07/WcfService1.Model")]
        System.IAsyncResult BeginIsAlbumExists(string albumName, string oldAlbumName, System.AsyncCallback callback, object asyncState);
        
        bool EndIsAlbumExists(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : MaFamille1.MaFamilleService.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPhotosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPhotosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MaFamille1.MaFamilleService.PhotoModel> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MaFamille1.MaFamilleService.PhotoModel>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTsunamiPhotosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTsunamiPhotosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MaFamille1.MaFamilleService.TsunamiModel> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MaFamille1.MaFamilleService.TsunamiModel>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPhotoObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPhotoObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MaFamille1.MaFamilleService.AlbumModel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MaFamille1.MaFamilleService.AlbumModel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAlbumsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAlbumsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MaFamille1.MaFamilleService.AlbumModel> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MaFamille1.MaFamilleService.AlbumModel>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadPhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UploadPhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MaFamille1.MaFamilleService.FileUploadModel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MaFamille1.MaFamilleService.FileUploadModel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemovePhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemovePhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsFileExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsFileExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsAlbumExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsAlbumExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<MaFamille1.MaFamilleService.IService>, MaFamille1.MaFamilleService.IService {
        
        private BeginOperationDelegate onBeginGetDataDelegate;
        
        private EndOperationDelegate onEndGetDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPhotosDelegate;
        
        private EndOperationDelegate onEndGetPhotosDelegate;
        
        private System.Threading.SendOrPostCallback onGetPhotosCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTsunamiPhotosDelegate;
        
        private EndOperationDelegate onEndGetTsunamiPhotosDelegate;
        
        private System.Threading.SendOrPostCallback onGetTsunamiPhotosCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPhotoDelegate;
        
        private EndOperationDelegate onEndGetPhotoDelegate;
        
        private System.Threading.SendOrPostCallback onGetPhotoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPhotoObjectDelegate;
        
        private EndOperationDelegate onEndGetPhotoObjectDelegate;
        
        private System.Threading.SendOrPostCallback onGetPhotoObjectCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAlbumsDelegate;
        
        private EndOperationDelegate onEndGetAlbumsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAlbumsCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadPhotoDelegate;
        
        private EndOperationDelegate onEndUploadPhotoDelegate;
        
        private System.Threading.SendOrPostCallback onUploadPhotoCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemovePhotoDelegate;
        
        private EndOperationDelegate onEndRemovePhotoDelegate;
        
        private System.Threading.SendOrPostCallback onRemovePhotoCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsFileExistsDelegate;
        
        private EndOperationDelegate onEndIsFileExistsDelegate;
        
        private System.Threading.SendOrPostCallback onIsFileExistsCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsAlbumExistsDelegate;
        
        private EndOperationDelegate onEndIsAlbumExistsDelegate;
        
        private System.Threading.SendOrPostCallback onIsAlbumExistsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetDataCompletedEventArgs> GetDataCompleted;
        
        public event System.EventHandler<GetPhotosCompletedEventArgs> GetPhotosCompleted;
        
        public event System.EventHandler<GetTsunamiPhotosCompletedEventArgs> GetTsunamiPhotosCompleted;
        
        public event System.EventHandler<GetPhotoCompletedEventArgs> GetPhotoCompleted;
        
        public event System.EventHandler<GetPhotoObjectCompletedEventArgs> GetPhotoObjectCompleted;
        
        public event System.EventHandler<GetAlbumsCompletedEventArgs> GetAlbumsCompleted;
        
        public event System.EventHandler<UploadPhotoCompletedEventArgs> UploadPhotoCompleted;
        
        public event System.EventHandler<RemovePhotoCompletedEventArgs> RemovePhotoCompleted;
        
        public event System.EventHandler<IsFileExistsCompletedEventArgs> IsFileExistsCompleted;
        
        public event System.EventHandler<IsAlbumExistsCompletedEventArgs> IsAlbumExistsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MaFamille1.MaFamilleService.IService.BeginGetData(int value, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetData(value, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string MaFamille1.MaFamilleService.IService.EndGetData(System.IAsyncResult result) {
            return base.Channel.EndGetData(result);
        }
        
        private System.IAsyncResult OnBeginGetData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int value = ((int)(inValues[0]));
            return ((MaFamille1.MaFamilleService.IService)(this)).BeginGetData(value, callback, asyncState);
        }
        
        private object[] OnEndGetData(System.IAsyncResult result) {
            string retVal = ((MaFamille1.MaFamilleService.IService)(this)).EndGetData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataCompleted(object state) {
            if ((this.GetDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataAsync(int value) {
            this.GetDataAsync(value, null);
        }
        
        public void GetDataAsync(int value, object userState) {
            if ((this.onBeginGetDataDelegate == null)) {
                this.onBeginGetDataDelegate = new BeginOperationDelegate(this.OnBeginGetData);
            }
            if ((this.onEndGetDataDelegate == null)) {
                this.onEndGetDataDelegate = new EndOperationDelegate(this.OnEndGetData);
            }
            if ((this.onGetDataCompletedDelegate == null)) {
                this.onGetDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataDelegate, new object[] {
                        value}, this.onEndGetDataDelegate, this.onGetDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MaFamille1.MaFamilleService.IService.BeginGetPhotos(string album, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPhotos(album, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MaFamille1.MaFamilleService.PhotoModel> MaFamille1.MaFamilleService.IService.EndGetPhotos(System.IAsyncResult result) {
            return base.Channel.EndGetPhotos(result);
        }
        
        private System.IAsyncResult OnBeginGetPhotos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string album = ((string)(inValues[0]));
            return ((MaFamille1.MaFamilleService.IService)(this)).BeginGetPhotos(album, callback, asyncState);
        }
        
        private object[] OnEndGetPhotos(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MaFamille1.MaFamilleService.PhotoModel> retVal = ((MaFamille1.MaFamilleService.IService)(this)).EndGetPhotos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPhotosCompleted(object state) {
            if ((this.GetPhotosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPhotosCompleted(this, new GetPhotosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPhotosAsync(string album) {
            this.GetPhotosAsync(album, null);
        }
        
        public void GetPhotosAsync(string album, object userState) {
            if ((this.onBeginGetPhotosDelegate == null)) {
                this.onBeginGetPhotosDelegate = new BeginOperationDelegate(this.OnBeginGetPhotos);
            }
            if ((this.onEndGetPhotosDelegate == null)) {
                this.onEndGetPhotosDelegate = new EndOperationDelegate(this.OnEndGetPhotos);
            }
            if ((this.onGetPhotosCompletedDelegate == null)) {
                this.onGetPhotosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPhotosCompleted);
            }
            base.InvokeAsync(this.onBeginGetPhotosDelegate, new object[] {
                        album}, this.onEndGetPhotosDelegate, this.onGetPhotosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MaFamille1.MaFamilleService.IService.BeginGetTsunamiPhotos(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTsunamiPhotos(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MaFamille1.MaFamilleService.TsunamiModel> MaFamille1.MaFamilleService.IService.EndGetTsunamiPhotos(System.IAsyncResult result) {
            return base.Channel.EndGetTsunamiPhotos(result);
        }
        
        private System.IAsyncResult OnBeginGetTsunamiPhotos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MaFamille1.MaFamilleService.IService)(this)).BeginGetTsunamiPhotos(callback, asyncState);
        }
        
        private object[] OnEndGetTsunamiPhotos(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MaFamille1.MaFamilleService.TsunamiModel> retVal = ((MaFamille1.MaFamilleService.IService)(this)).EndGetTsunamiPhotos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTsunamiPhotosCompleted(object state) {
            if ((this.GetTsunamiPhotosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTsunamiPhotosCompleted(this, new GetTsunamiPhotosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTsunamiPhotosAsync() {
            this.GetTsunamiPhotosAsync(null);
        }
        
        public void GetTsunamiPhotosAsync(object userState) {
            if ((this.onBeginGetTsunamiPhotosDelegate == null)) {
                this.onBeginGetTsunamiPhotosDelegate = new BeginOperationDelegate(this.OnBeginGetTsunamiPhotos);
            }
            if ((this.onEndGetTsunamiPhotosDelegate == null)) {
                this.onEndGetTsunamiPhotosDelegate = new EndOperationDelegate(this.OnEndGetTsunamiPhotos);
            }
            if ((this.onGetTsunamiPhotosCompletedDelegate == null)) {
                this.onGetTsunamiPhotosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTsunamiPhotosCompleted);
            }
            base.InvokeAsync(this.onBeginGetTsunamiPhotosDelegate, null, this.onEndGetTsunamiPhotosDelegate, this.onGetTsunamiPhotosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MaFamille1.MaFamilleService.IService.BeginGetPhoto(string albumName, string fileName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPhoto(albumName, fileName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] MaFamille1.MaFamilleService.IService.EndGetPhoto(System.IAsyncResult result) {
            return base.Channel.EndGetPhoto(result);
        }
        
        private System.IAsyncResult OnBeginGetPhoto(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string albumName = ((string)(inValues[0]));
            string fileName = ((string)(inValues[1]));
            return ((MaFamille1.MaFamilleService.IService)(this)).BeginGetPhoto(albumName, fileName, callback, asyncState);
        }
        
        private object[] OnEndGetPhoto(System.IAsyncResult result) {
            byte[] retVal = ((MaFamille1.MaFamilleService.IService)(this)).EndGetPhoto(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPhotoCompleted(object state) {
            if ((this.GetPhotoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPhotoCompleted(this, new GetPhotoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPhotoAsync(string albumName, string fileName) {
            this.GetPhotoAsync(albumName, fileName, null);
        }
        
        public void GetPhotoAsync(string albumName, string fileName, object userState) {
            if ((this.onBeginGetPhotoDelegate == null)) {
                this.onBeginGetPhotoDelegate = new BeginOperationDelegate(this.OnBeginGetPhoto);
            }
            if ((this.onEndGetPhotoDelegate == null)) {
                this.onEndGetPhotoDelegate = new EndOperationDelegate(this.OnEndGetPhoto);
            }
            if ((this.onGetPhotoCompletedDelegate == null)) {
                this.onGetPhotoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPhotoCompleted);
            }
            base.InvokeAsync(this.onBeginGetPhotoDelegate, new object[] {
                        albumName,
                        fileName}, this.onEndGetPhotoDelegate, this.onGetPhotoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MaFamille1.MaFamilleService.IService.BeginGetPhotoObject(string fileName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPhotoObject(fileName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MaFamille1.MaFamilleService.AlbumModel MaFamille1.MaFamilleService.IService.EndGetPhotoObject(System.IAsyncResult result) {
            return base.Channel.EndGetPhotoObject(result);
        }
        
        private System.IAsyncResult OnBeginGetPhotoObject(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            return ((MaFamille1.MaFamilleService.IService)(this)).BeginGetPhotoObject(fileName, callback, asyncState);
        }
        
        private object[] OnEndGetPhotoObject(System.IAsyncResult result) {
            MaFamille1.MaFamilleService.AlbumModel retVal = ((MaFamille1.MaFamilleService.IService)(this)).EndGetPhotoObject(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPhotoObjectCompleted(object state) {
            if ((this.GetPhotoObjectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPhotoObjectCompleted(this, new GetPhotoObjectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPhotoObjectAsync(string fileName) {
            this.GetPhotoObjectAsync(fileName, null);
        }
        
        public void GetPhotoObjectAsync(string fileName, object userState) {
            if ((this.onBeginGetPhotoObjectDelegate == null)) {
                this.onBeginGetPhotoObjectDelegate = new BeginOperationDelegate(this.OnBeginGetPhotoObject);
            }
            if ((this.onEndGetPhotoObjectDelegate == null)) {
                this.onEndGetPhotoObjectDelegate = new EndOperationDelegate(this.OnEndGetPhotoObject);
            }
            if ((this.onGetPhotoObjectCompletedDelegate == null)) {
                this.onGetPhotoObjectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPhotoObjectCompleted);
            }
            base.InvokeAsync(this.onBeginGetPhotoObjectDelegate, new object[] {
                        fileName}, this.onEndGetPhotoObjectDelegate, this.onGetPhotoObjectCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MaFamille1.MaFamilleService.IService.BeginGetAlbums(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAlbums(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MaFamille1.MaFamilleService.AlbumModel> MaFamille1.MaFamilleService.IService.EndGetAlbums(System.IAsyncResult result) {
            return base.Channel.EndGetAlbums(result);
        }
        
        private System.IAsyncResult OnBeginGetAlbums(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MaFamille1.MaFamilleService.IService)(this)).BeginGetAlbums(callback, asyncState);
        }
        
        private object[] OnEndGetAlbums(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MaFamille1.MaFamilleService.AlbumModel> retVal = ((MaFamille1.MaFamilleService.IService)(this)).EndGetAlbums(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAlbumsCompleted(object state) {
            if ((this.GetAlbumsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAlbumsCompleted(this, new GetAlbumsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAlbumsAsync() {
            this.GetAlbumsAsync(null);
        }
        
        public void GetAlbumsAsync(object userState) {
            if ((this.onBeginGetAlbumsDelegate == null)) {
                this.onBeginGetAlbumsDelegate = new BeginOperationDelegate(this.OnBeginGetAlbums);
            }
            if ((this.onEndGetAlbumsDelegate == null)) {
                this.onEndGetAlbumsDelegate = new EndOperationDelegate(this.OnEndGetAlbums);
            }
            if ((this.onGetAlbumsCompletedDelegate == null)) {
                this.onGetAlbumsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAlbumsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAlbumsDelegate, null, this.onEndGetAlbumsDelegate, this.onGetAlbumsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MaFamille1.MaFamilleService.IService.BeginUploadPhoto(string albumName, string fileName, byte[] content, int id, bool append, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadPhoto(albumName, fileName, content, id, append, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MaFamille1.MaFamilleService.FileUploadModel MaFamille1.MaFamilleService.IService.EndUploadPhoto(System.IAsyncResult result) {
            return base.Channel.EndUploadPhoto(result);
        }
        
        private System.IAsyncResult OnBeginUploadPhoto(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string albumName = ((string)(inValues[0]));
            string fileName = ((string)(inValues[1]));
            byte[] content = ((byte[])(inValues[2]));
            int id = ((int)(inValues[3]));
            bool append = ((bool)(inValues[4]));
            return ((MaFamille1.MaFamilleService.IService)(this)).BeginUploadPhoto(albumName, fileName, content, id, append, callback, asyncState);
        }
        
        private object[] OnEndUploadPhoto(System.IAsyncResult result) {
            MaFamille1.MaFamilleService.FileUploadModel retVal = ((MaFamille1.MaFamilleService.IService)(this)).EndUploadPhoto(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUploadPhotoCompleted(object state) {
            if ((this.UploadPhotoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadPhotoCompleted(this, new UploadPhotoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadPhotoAsync(string albumName, string fileName, byte[] content, int id, bool append) {
            this.UploadPhotoAsync(albumName, fileName, content, id, append, null);
        }
        
        public void UploadPhotoAsync(string albumName, string fileName, byte[] content, int id, bool append, object userState) {
            if ((this.onBeginUploadPhotoDelegate == null)) {
                this.onBeginUploadPhotoDelegate = new BeginOperationDelegate(this.OnBeginUploadPhoto);
            }
            if ((this.onEndUploadPhotoDelegate == null)) {
                this.onEndUploadPhotoDelegate = new EndOperationDelegate(this.OnEndUploadPhoto);
            }
            if ((this.onUploadPhotoCompletedDelegate == null)) {
                this.onUploadPhotoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadPhotoCompleted);
            }
            base.InvokeAsync(this.onBeginUploadPhotoDelegate, new object[] {
                        albumName,
                        fileName,
                        content,
                        id,
                        append}, this.onEndUploadPhotoDelegate, this.onUploadPhotoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MaFamille1.MaFamilleService.IService.BeginRemovePhoto(string fileName, int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemovePhoto(fileName, id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int MaFamille1.MaFamilleService.IService.EndRemovePhoto(System.IAsyncResult result) {
            return base.Channel.EndRemovePhoto(result);
        }
        
        private System.IAsyncResult OnBeginRemovePhoto(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            int id = ((int)(inValues[1]));
            return ((MaFamille1.MaFamilleService.IService)(this)).BeginRemovePhoto(fileName, id, callback, asyncState);
        }
        
        private object[] OnEndRemovePhoto(System.IAsyncResult result) {
            int retVal = ((MaFamille1.MaFamilleService.IService)(this)).EndRemovePhoto(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemovePhotoCompleted(object state) {
            if ((this.RemovePhotoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemovePhotoCompleted(this, new RemovePhotoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemovePhotoAsync(string fileName, int id) {
            this.RemovePhotoAsync(fileName, id, null);
        }
        
        public void RemovePhotoAsync(string fileName, int id, object userState) {
            if ((this.onBeginRemovePhotoDelegate == null)) {
                this.onBeginRemovePhotoDelegate = new BeginOperationDelegate(this.OnBeginRemovePhoto);
            }
            if ((this.onEndRemovePhotoDelegate == null)) {
                this.onEndRemovePhotoDelegate = new EndOperationDelegate(this.OnEndRemovePhoto);
            }
            if ((this.onRemovePhotoCompletedDelegate == null)) {
                this.onRemovePhotoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemovePhotoCompleted);
            }
            base.InvokeAsync(this.onBeginRemovePhotoDelegate, new object[] {
                        fileName,
                        id}, this.onEndRemovePhotoDelegate, this.onRemovePhotoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MaFamille1.MaFamilleService.IService.BeginIsFileExists(string albumName, string fileName, long length, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsFileExists(albumName, fileName, length, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool MaFamille1.MaFamilleService.IService.EndIsFileExists(System.IAsyncResult result) {
            return base.Channel.EndIsFileExists(result);
        }
        
        private System.IAsyncResult OnBeginIsFileExists(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string albumName = ((string)(inValues[0]));
            string fileName = ((string)(inValues[1]));
            long length = ((long)(inValues[2]));
            return ((MaFamille1.MaFamilleService.IService)(this)).BeginIsFileExists(albumName, fileName, length, callback, asyncState);
        }
        
        private object[] OnEndIsFileExists(System.IAsyncResult result) {
            bool retVal = ((MaFamille1.MaFamilleService.IService)(this)).EndIsFileExists(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsFileExistsCompleted(object state) {
            if ((this.IsFileExistsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsFileExistsCompleted(this, new IsFileExistsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsFileExistsAsync(string albumName, string fileName, long length) {
            this.IsFileExistsAsync(albumName, fileName, length, null);
        }
        
        public void IsFileExistsAsync(string albumName, string fileName, long length, object userState) {
            if ((this.onBeginIsFileExistsDelegate == null)) {
                this.onBeginIsFileExistsDelegate = new BeginOperationDelegate(this.OnBeginIsFileExists);
            }
            if ((this.onEndIsFileExistsDelegate == null)) {
                this.onEndIsFileExistsDelegate = new EndOperationDelegate(this.OnEndIsFileExists);
            }
            if ((this.onIsFileExistsCompletedDelegate == null)) {
                this.onIsFileExistsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsFileExistsCompleted);
            }
            base.InvokeAsync(this.onBeginIsFileExistsDelegate, new object[] {
                        albumName,
                        fileName,
                        length}, this.onEndIsFileExistsDelegate, this.onIsFileExistsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MaFamille1.MaFamilleService.IService.BeginIsAlbumExists(string albumName, string oldAlbumName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsAlbumExists(albumName, oldAlbumName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool MaFamille1.MaFamilleService.IService.EndIsAlbumExists(System.IAsyncResult result) {
            return base.Channel.EndIsAlbumExists(result);
        }
        
        private System.IAsyncResult OnBeginIsAlbumExists(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string albumName = ((string)(inValues[0]));
            string oldAlbumName = ((string)(inValues[1]));
            return ((MaFamille1.MaFamilleService.IService)(this)).BeginIsAlbumExists(albumName, oldAlbumName, callback, asyncState);
        }
        
        private object[] OnEndIsAlbumExists(System.IAsyncResult result) {
            bool retVal = ((MaFamille1.MaFamilleService.IService)(this)).EndIsAlbumExists(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsAlbumExistsCompleted(object state) {
            if ((this.IsAlbumExistsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsAlbumExistsCompleted(this, new IsAlbumExistsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsAlbumExistsAsync(string albumName, string oldAlbumName) {
            this.IsAlbumExistsAsync(albumName, oldAlbumName, null);
        }
        
        public void IsAlbumExistsAsync(string albumName, string oldAlbumName, object userState) {
            if ((this.onBeginIsAlbumExistsDelegate == null)) {
                this.onBeginIsAlbumExistsDelegate = new BeginOperationDelegate(this.OnBeginIsAlbumExists);
            }
            if ((this.onEndIsAlbumExistsDelegate == null)) {
                this.onEndIsAlbumExistsDelegate = new EndOperationDelegate(this.OnEndIsAlbumExists);
            }
            if ((this.onIsAlbumExistsCompletedDelegate == null)) {
                this.onIsAlbumExistsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsAlbumExistsCompleted);
            }
            base.InvokeAsync(this.onBeginIsAlbumExistsDelegate, new object[] {
                        albumName,
                        oldAlbumName}, this.onEndIsAlbumExistsDelegate, this.onIsAlbumExistsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override MaFamille1.MaFamilleService.IService CreateChannel() {
            return new ServiceClientChannel(this);
        }
        
        private class ServiceClientChannel : ChannelBase<MaFamille1.MaFamilleService.IService>, MaFamille1.MaFamilleService.IService {
            
            public ServiceClientChannel(System.ServiceModel.ClientBase<MaFamille1.MaFamilleService.IService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetData(int value, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = value;
                System.IAsyncResult _result = base.BeginInvoke("GetData", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetData(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPhotos(string album, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = album;
                System.IAsyncResult _result = base.BeginInvoke("GetPhotos", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MaFamille1.MaFamilleService.PhotoModel> EndGetPhotos(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MaFamille1.MaFamilleService.PhotoModel> _result = ((System.Collections.ObjectModel.ObservableCollection<MaFamille1.MaFamilleService.PhotoModel>)(base.EndInvoke("GetPhotos", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTsunamiPhotos(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetTsunamiPhotos", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MaFamille1.MaFamilleService.TsunamiModel> EndGetTsunamiPhotos(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MaFamille1.MaFamilleService.TsunamiModel> _result = ((System.Collections.ObjectModel.ObservableCollection<MaFamille1.MaFamilleService.TsunamiModel>)(base.EndInvoke("GetTsunamiPhotos", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPhoto(string albumName, string fileName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = albumName;
                _args[1] = fileName;
                System.IAsyncResult _result = base.BeginInvoke("GetPhoto", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndGetPhoto(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("GetPhoto", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPhotoObject(string fileName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = fileName;
                System.IAsyncResult _result = base.BeginInvoke("GetPhotoObject", _args, callback, asyncState);
                return _result;
            }
            
            public MaFamille1.MaFamilleService.AlbumModel EndGetPhotoObject(System.IAsyncResult result) {
                object[] _args = new object[0];
                MaFamille1.MaFamilleService.AlbumModel _result = ((MaFamille1.MaFamilleService.AlbumModel)(base.EndInvoke("GetPhotoObject", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAlbums(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAlbums", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MaFamille1.MaFamilleService.AlbumModel> EndGetAlbums(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MaFamille1.MaFamilleService.AlbumModel> _result = ((System.Collections.ObjectModel.ObservableCollection<MaFamille1.MaFamilleService.AlbumModel>)(base.EndInvoke("GetAlbums", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUploadPhoto(string albumName, string fileName, byte[] content, int id, bool append, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = albumName;
                _args[1] = fileName;
                _args[2] = content;
                _args[3] = id;
                _args[4] = append;
                System.IAsyncResult _result = base.BeginInvoke("UploadPhoto", _args, callback, asyncState);
                return _result;
            }
            
            public MaFamille1.MaFamilleService.FileUploadModel EndUploadPhoto(System.IAsyncResult result) {
                object[] _args = new object[0];
                MaFamille1.MaFamilleService.FileUploadModel _result = ((MaFamille1.MaFamilleService.FileUploadModel)(base.EndInvoke("UploadPhoto", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemovePhoto(string fileName, int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = fileName;
                _args[1] = id;
                System.IAsyncResult _result = base.BeginInvoke("RemovePhoto", _args, callback, asyncState);
                return _result;
            }
            
            public int EndRemovePhoto(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("RemovePhoto", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginIsFileExists(string albumName, string fileName, long length, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = albumName;
                _args[1] = fileName;
                _args[2] = length;
                System.IAsyncResult _result = base.BeginInvoke("IsFileExists", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndIsFileExists(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("IsFileExists", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginIsAlbumExists(string albumName, string oldAlbumName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = albumName;
                _args[1] = oldAlbumName;
                System.IAsyncResult _result = base.BeginInvoke("IsAlbumExists", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndIsAlbumExists(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("IsAlbumExists", _args, result)));
                return _result;
            }
        }
    }
}
